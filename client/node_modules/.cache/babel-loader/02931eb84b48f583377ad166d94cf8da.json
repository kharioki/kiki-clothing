{"ast":null,"code":"import _objectSpread from \"/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n;\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\n;","map":{"version":3,"sources":["/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport {\n    signInSuccess,\n    signInFailure,\n    signOutSuccess,\n    signOutFailure,\n    signUpSuccess,\n    signUpFailure\n} from './user.actions';\n\nimport { \n    auth, \n    googleProvider, \n    createUserProfileDocument,\n    getCurrentUser\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({ \n                id: userSnapshot.id, \n                ...userSnapshot.data() \n            })\n        );\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* signInWithEmail({payload: { email, password }}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user)\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n};\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n};\n\nexport function* signUp({payload: { email, password, displayName }}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({ user, additionalData: { displayName } }));\n    } catch (error) {\n        yield put(signUpFailure(error))\n    }\n};\n\nexport function* signInAfterSignUp({payload: { user, additionalData }}) {\n    yield getSnapshotFromUserAuth(user, additionalData);\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserActionTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    )\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(\n        UserActionTypes.EMAIL_SIGN_IN_START,\n        signInWithEmail\n    )\n};\n\nexport function* onCheckUserSession() {\n    yield takeLatest(\n        UserActionTypes.CHECK_USER_SESSION,\n        isUserAuthenticated\n    )\n};\n\nexport function* onSignOutStart() {\n    yield takeLatest(\n        UserActionTypes.SIGN_OUT_START,\n        signOut\n    )\n};\n\nexport function* onSignUpStart() {\n    yield takeLatest(\n        UserActionTypes.SIGN_UP_START,\n        signUp\n    )\n};\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(\n        UserActionTypes.SIGN_UP_SUCCESS,\n        signInAfterSignUp\n    )\n};\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ])\n};\n"]},"metadata":{},"sourceType":"module"}