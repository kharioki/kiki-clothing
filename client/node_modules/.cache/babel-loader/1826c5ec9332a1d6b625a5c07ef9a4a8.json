{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections'); // collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    // })\n    // collectionRef.get().then(snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    //   }\n    // )\n\n    fetch('https://firestore.googleapis.com/v1/projects/kiki-clothing-db/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections));\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","WithSpinner","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGH,WAAW,CAACH,cAAD,CAA7C;;AACA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAAA,UACRR,iBADQ,GACc,KAAKS,KADnB,CACRT,iBADQ;AAEhB,UAAMU,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB,CAFgB,CAIhB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,IAAAA,KAAK,CAAC,yGAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFvB;AAGH;;AAEHG,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKX,KADhB,CACCW,KADD;AAAA,UAECd,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAGP,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAD9B;AAEI,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGZ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAYD;;AA3CoC;;AA8CvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IAAID,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAe9B,OAAO,CAClB,IADkB,EAElB4B,kBAFkB,CAAP,CAGbnB,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    }\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        // collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({ loading: false });\n        // })\n\n        // collectionRef.get().then(snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({ loading: false });\n        //   }\n        // )\n\n        fetch('https://firestore.googleapis.com/v1/projects/kiki-clothing-db/databases/(default)/documents/collections')\n          .then(response => response.json())\n          .then(collections => console.log(collections))\n    }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n        <div className='shop-page'>\n            <Route \n                exact path={`${match.path}`} \n                render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> } \n            />\n            <Route \n                path={`${match.path}/:collectionId`} \n                render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} /> } \n            />\n        </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}