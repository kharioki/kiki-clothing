{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Oops, passwords don't match!!\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Sign up with email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"displayName\",\n      type: \"text\",\n      value: displayName,\n      handleChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","SignUpContainer","SignUpTitle","FormInput","CustomButton","signUpStart","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","alert","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions'\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { signUpStart } = this.props;\n\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        if(password !== confirmPassword) {\n            alert(\"Oops, passwords don't match!!\");\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n\n        this.setState({ [name]: value })\n    }\n    \n    render() {\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        return (\n            <SignUpContainer>\n                <SignUpTitle>I do not have an account</SignUpTitle>\n                <span>Sign up with email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput name='displayName' type='text' value={displayName} handleChange={this.handleChange} label='Display Name' required />\n                    <FormInput name='email' type='email' value={email} handleChange={this.handleChange} label='Email' required />\n                    <FormInput name='password' type='password' value={password} handleChange={this.handleChange} label='Password' required />\n                    <FormInput name='confirmPassword' type='password' value={confirmPassword} handleChange={this.handleChange} label='Confirm Password' required />\n                    <CustomButton type='submit' >Sign Up</CustomButton>\n                </form>\n            </SignUpContainer>\n        )\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(SignUp);"]},"metadata":{},"sourceType":"module"}