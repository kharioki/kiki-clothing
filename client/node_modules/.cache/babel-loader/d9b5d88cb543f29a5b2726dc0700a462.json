{"ast":null,"code":"import _objectSpread from \"/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsContainer } from './sign-in.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/tony/Desktop/2020-classes/Advanced-react/kiki-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","SignInContainer","SignInTitle","ButtonsContainer","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SignInContainer, SignInTitle, ButtonsContainer } from './sign-in.styles';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' });\n\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n        emailSignInStart(email, password);\n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n\n        setCredentials({ ...userCredentials, [name]: value })\n    }\n\n    return (\n        <SignInContainer>\n            <SignInTitle>I already have an account</SignInTitle>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput name='email' type='email' value={email} handleChange={handleChange} label='Email' required />\n                <FormInput name='password' type='password' value={password} handleChange={handleChange} label='Password' required />\n\n                <ButtonsContainer>\n                    <CustomButton type='submit' >Sign In</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\n                </ButtonsContainer>\n            </form>\n        </SignInContainer>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(SignIn);"]},"metadata":{},"sourceType":"module"}